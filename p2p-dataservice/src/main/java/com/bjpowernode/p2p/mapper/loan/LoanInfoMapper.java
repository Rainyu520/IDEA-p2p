package com.bjpowernode.p2p.mapper.loan;

import com.bjpowernode.p2p.model.loan.LoanInfo;

import java.util.List;
import java.util.Map;

public interface LoanInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_loan_info
     *
     * @mbggenerated Thu Sep 12 12:56:01 CST 2019
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_loan_info
     *
     * @mbggenerated Thu Sep 12 12:56:01 CST 2019
     */
    int insert(LoanInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_loan_info
     *
     * @mbggenerated Thu Sep 12 12:56:01 CST 2019
     */
    int insertSelective(LoanInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_loan_info
     *
     * @mbggenerated Thu Sep 12 12:56:01 CST 2019
     */
    LoanInfo selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_loan_info
     *
     * @mbggenerated Thu Sep 12 12:56:01 CST 2019
     */
    int updateByPrimaryKeySelective(LoanInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table b_loan_info
     *
     * @mbggenerated Thu Sep 12 12:56:01 CST 2019
     */
    int updateByPrimaryKey(LoanInfo record);

    /**
     * 查询历史平均年收益率
     * @return
     */

    Double selectHistoryAverageRate();

    /**
     *
     * @param map
     * @return 根据产品类型查询最近产品信息
     */

    List<LoanInfo> selectLoanInfoListByProductType(Map<String, Object> map);

    /**
     * 根据产品类型查询总条数
     * @param map
     * @return
     */
    Long selectLoanInfoTotalByProductType(Map<String, Object> map);


    /**
     * 根据ID查询产品信息
     * @param loanId
     * @return
     */
    LoanInfo selectLoanInfoListById(Integer loanId);

    /**
     * 根据产品id修改剩余可投余额 ： 乐观锁
     * @param map
     * @return
     */

    int updateLeftMoneyByLoanId(Map<String, Object> map);

    /**
     * 根据产品类型查询产品列表
     * @param i
     * @return
     */
    List<LoanInfo> queryLoanListByProductType(int i);
}